plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.koreasoft'
version = '0.3'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootWar.enabled = false
war.enabled = true

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'io.sentry:sentry-spring-boot-starter:4.0.0'
    implementation 'org.springframework.security:spring-security-taglibs'
    implementation 'javax.servlet:jstl'
    implementation 'junit:junit:4.12'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.12' // 알리고 문자전송을 위해..
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5' // 알리고 문자전송을 위해..
    // 퍼지검색을위한 라이브러리
    // 루씬(Lucene)은 자바 언어로 이루어진 정보 검색 라이브러리 자유-오픈 소스 소프트웨어이며,
    // 더그 커팅에 의해 개발되었다. 아파치 소프트웨어 재단에 의해 지원되며, 아파치 라이선스 하에 배포된다.
//    implementation group: 'org.apache.lucene', name: 'lucene-core', version: '8.7.0'
//    implementation group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.7.0'
//    implementation group: 'com.querydsl', name: 'querydsl-lucene3', version: '4.3.0'


    compileOnly 'org.projectlombok:lombok'
    runtime('org.springframework.boot:spring-boot-devtools') // hot reload
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    compile('org.apache.commons:commons-text:1.8') // json filter 를 위해 사용
    compile('com.navercorp.lucy:lucy-xss-servlet:2.0.0') // lucy 필터를 위해 사용
    compile group: 'commons-io', name: 'commons-io', version: '2.4'



    // QueryDSL - DSL(Domain Specific Language)
    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    //redis
    compile "org.springframework.boot:spring-boot-starter-data-redis"
    compile "redis.clients:jedis:2.9.0"
    compile "org.springframework.session:spring-session-data-redis"

    //cache
    compile('org.springframework.boot:spring-boot-starter-cache')

}
def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}

apply plugin: 'idea'

test {
    useJUnitPlatform()
}
